// Generated by CoffeeScript 1.10.0
var $, ErrorAlert, ImageInput, ImageUpload, ImageView, React, ReactDOM, RemoveImage, UploadImage, a, div, form, h3, input, label, p, ref, span;

React = require('react');

ReactDOM = require('react-dom');

$ = require('jquery');

ref = React.DOM, div = ref.div, h3 = ref.h3, p = ref.p, form = ref.form, input = ref.input, label = ref.label, a = ref.a, span = ref.span;

ImageView = require('./image-view.js');

UploadImage = require('../functions/upload-image.js');

RemoveImage = require('../functions/remove-img.js');

ErrorAlert = React.createClass({
  render: function() {
    return div({
      className: 'alert alert-danger image-input-alert',
      role: 'alert'
    }, p({
      className: 'text-input-alert-text'
    }, "You must upload at least 1 image"));
  }
});

ImageInput = React.createClass({
  handleUpload: function() {
    return this.props.submitImage();
  },
  render: function() {
    console.log(this.props.image_amount);
    if (this.props.image_amount !== 5) {
      return div({
        className: 'upload-image-input-container btn btn-primary'
      }, "Add Image", input({
        type: 'file',
        onChange: this.handleUpload,
        id: this.props.id
      }));
    } else {
      return div({
        className: 'upload-image-input-container btn btn-primary disabled'
      }, "Add Image");
    }
  }
});

ImageUpload = React.createClass({
  getInitialState: function() {
    return {
      image_amount: ['z'],
      images: [],
      error: false
    };
  },
  deleteImage: function(img) {
    var _this;
    _this = this;
    return RemoveImage(img).then(function(rsp) {
      var rm;
      console.log(rsp);
      rm = _this.state.images.indexOf(img);
      _this.state.images.splice(rm, 1);
      return _this.forceUpdate();
    });
  },
  submitImage: function() {
    var _this;
    this.setState({
      error: false
    });
    _this = this;
    return UploadImage().then(function(rsp) {
      _this.state.images.push(rsp);
      $('#image-input').val('');
      return _this.forceUpdate();
    });
  },
  nextStep: function() {
    if (this.state.images.length === 0) {
      this.setState({
        error: true
      });
      return;
    }
    return this.props.changeStep(this.state.images, this.state.images.length);
  },
  render: function() {
    return div({
      className: 'container'
    }, this.state.error ? React.createElement(ErrorAlert) : void 0, div({
      className: 'row'
    }, div({
      className: 'col-sm-6 upload-btn-container'
    }, React.createElement(ImageInput, {
      id: 'image-input',
      submitImage: this.submitImage,
      image_amount: this.state.images.length
    })), div({
      className: 'col-sm-6'
    }, p, String(this.state.images.length + "/5"))), React.createElement(ImageView, {
      images: this.state.images,
      deleteImage: this.deleteImage
    }), div({
      className: 'container'
    }, a({
      className: 'btn btn-primary image-submit-btn',
      onClick: this.nextStep
    }, 'Submit Images')));
  }
});

module.exports = ImageUpload;
